// Mocks generated by Mockito 5.4.4 from annotations
// in oivan_test/test/features/user_management/applications/user_management_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:oivan_test/api/api_error.dart' as _i6;
import 'package:oivan_test/features/user_management/domain/request_model/reputation_history_request.dart'
    as _i10;
import 'package:oivan_test/features/user_management/domain/request_model/user_list_request.dart'
    as _i8;
import 'package:oivan_test/features/user_management/domain/response_model/reputation_history.dart'
    as _i9;
import 'package:oivan_test/features/user_management/domain/response_model/sof_user.dart'
    as _i7;
import 'package:oivan_test/features/user_management/repositories/user_management_repositories.dart'
    as _i4;
import 'package:oivan_test/features/user_management/sources/i_user_management_sources.dart'
    as _i2;
import 'package:oivan_test/utils/cache/cache.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIUserManagementSources_0 extends _i1.SmartFake
    implements _i2.IUserManagementSources {
  _FakeIUserManagementSources_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserManagementRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserManagementRepositories extends _i1.Mock
    implements _i4.UserManagementRepositories {
  MockUserManagementRepositories() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IUserManagementSources get sources => (super.noSuchMethod(
        Invocation.getter(#sources),
        returnValue: _FakeIUserManagementSources_0(
          this,
          Invocation.getter(#sources),
        ),
      ) as _i2.IUserManagementSources);

  @override
  _i5.Future<_i3.Either<_i6.ApiError, _i7.SOFUserList>> getUserList(
          _i8.UserListRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserList,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.ApiError, _i7.SOFUserList>>.value(
                _FakeEither_1<_i6.ApiError, _i7.SOFUserList>(
          this,
          Invocation.method(
            #getUserList,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.ApiError, _i7.SOFUserList>>);

  @override
  _i5.Future<_i3.Either<_i6.ApiError, _i9.ReputationHistoryList>>
      getReputationHistoryList(_i10.ReputationHistoryRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getReputationHistoryList,
              [request],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.ApiError, _i9.ReputationHistoryList>>.value(
                _FakeEither_1<_i6.ApiError, _i9.ReputationHistoryList>(
              this,
              Invocation.method(
                #getReputationHistoryList,
                [request],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.ApiError, _i9.ReputationHistoryList>>);
}

/// A class which mocks [Cache].
///
/// See the documentation for Mockito's code generation for more information.
class MockCache extends _i1.Mock implements _i11.Cache {
  MockCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.SOFUser> get listUserOnSaved => (super.noSuchMethod(
        Invocation.getter(#listUserOnSaved),
        returnValue: <_i7.SOFUser>[],
      ) as List<_i7.SOFUser>);

  @override
  set listUserOnSaved(List<_i7.SOFUser>? _listUserOnSaved) =>
      super.noSuchMethod(
        Invocation.setter(
          #listUserOnSaved,
          _listUserOnSaved,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<int> get listUserIdOnSaved => (super.noSuchMethod(
        Invocation.getter(#listUserIdOnSaved),
        returnValue: <int>[],
      ) as List<int>);

  @override
  void saveUser(_i7.SOFUser? user) => super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUser(_i7.SOFUser? user) => super.noSuchMethod(
        Invocation.method(
          #removeUser,
          [user],
        ),
        returnValueForMissingStub: null,
      );
}
